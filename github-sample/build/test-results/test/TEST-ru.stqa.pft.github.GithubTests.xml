<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ru.stqa.pft.github.GithubTests" tests="1" skipped="0" failures="1" errors="0" timestamp="2019-12-19T00:43:58" hostname="Vadims-MacBook-Pro.local" time="1.409">
  <properties/>
  <testcase name="testCommits" classname="ru.stqa.pft.github.GithubTests" time="1.409">
    <failure message="java.lang.AssertionError: HTTP response status is not equal to 200:&#10;401 Unauthorized [https://api.github.com/repos/thaidem/java_project/commits]&#10;Date: Thu, 19 Dec 2019 00:44:00 GMT&#10;Content-Type: application/json; charset=utf-8&#10;Content-Length: 83&#10;Server: GitHub.com&#10;Status: 401 Unauthorized&#10;X-GitHub-Media-Type: github.v3&#10;X-RateLimit-Limit: 60&#10;X-RateLimit-Remaining: 58&#10;X-RateLimit-Reset: 1576719716&#10;Access-Control-Expose-Headers: ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type&#10;Access-Control-Allow-Origin: *&#10;Strict-Transport-Security: max-age=31536000; includeSubdomains; preload&#10;X-Frame-Options: deny&#10;X-Content-Type-Options: nosniff&#10;X-XSS-Protection: 1; mode=block&#10;Referrer-Policy: origin-when-cross-origin, strict-origin-when-cross-origin&#10;Content-Security-Policy: default-src 'none'&#10;X-GitHub-Request-Id: F2D1:223D8:FCB054:13138F6:5DFAC7CF&#10;&#10;{&quot;message&quot;:&quot;Bad credentials&quot;,&quot;documentation_url&quot;:&quot;https://developer.github.com/v3&quot;}&#10;Expected: HTTP response with status 200&#10;     but: was &lt;401 Unauthorized [https://api.github.com/repos/thaidem/java_project/commits]&#10;Date: Thu, 19 Dec 2019 00:44:00 GMT&#10;Content-Type: application/json; charset=utf-8&#10;Content-Length: 83&#10;Server: GitHub.com&#10;Status: 401 Unauthorized&#10;X-GitHub-Media-Type: github.v3&#10;X-RateLimit-Limit: 60&#10;X-RateLimit-Remaining: 58&#10;X-RateLimit-Reset: 1576719716&#10;Access-Control-Expose-Headers: ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type&#10;Access-Control-Allow-Origin: *&#10;Strict-Transport-Security: max-age=31536000; includeSubdomains; preload&#10;X-Frame-Options: deny&#10;X-Content-Type-Options: nosniff&#10;X-XSS-Protection: 1; mode=block&#10;Referrer-Policy: origin-when-cross-origin, strict-origin-when-cross-origin&#10;Content-Security-Policy: default-src 'none'&#10;X-GitHub-Request-Id: F2D1:223D8:FCB054:13138F6:5DFAC7CF&#10;&#10;{&quot;message&quot;:&quot;Bad credentials&quot;,&quot;documentation_url&quot;:&quot;https://developer.github.com/v3&quot;}&gt;" type="java.lang.AssertionError">java.lang.AssertionError: HTTP response status is not equal to 200:
401 Unauthorized [https://api.github.com/repos/thaidem/java_project/commits]
Date: Thu, 19 Dec 2019 00:44:00 GMT
Content-Type: application/json; charset=utf-8
Content-Length: 83
Server: GitHub.com
Status: 401 Unauthorized
X-GitHub-Media-Type: github.v3
X-RateLimit-Limit: 60
X-RateLimit-Remaining: 58
X-RateLimit-Reset: 1576719716
Access-Control-Expose-Headers: ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type
Access-Control-Allow-Origin: *
Strict-Transport-Security: max-age=31536000; includeSubdomains; preload
X-Frame-Options: deny
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
Referrer-Policy: origin-when-cross-origin, strict-origin-when-cross-origin
Content-Security-Policy: default-src 'none'
X-GitHub-Request-Id: F2D1:223D8:FCB054:13138F6:5DFAC7CF

{&quot;message&quot;:&quot;Bad credentials&quot;,&quot;documentation_url&quot;:&quot;https://developer.github.com/v3&quot;}
Expected: HTTP response with status 200
     but: was &lt;401 Unauthorized [https://api.github.com/repos/thaidem/java_project/commits]
Date: Thu, 19 Dec 2019 00:44:00 GMT
Content-Type: application/json; charset=utf-8
Content-Length: 83
Server: GitHub.com
Status: 401 Unauthorized
X-GitHub-Media-Type: github.v3
X-RateLimit-Limit: 60
X-RateLimit-Remaining: 58
X-RateLimit-Reset: 1576719716
Access-Control-Expose-Headers: ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type
Access-Control-Allow-Origin: *
Strict-Transport-Security: max-age=31536000; includeSubdomains; preload
X-Frame-Options: deny
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
Referrer-Policy: origin-when-cross-origin, strict-origin-when-cross-origin
Content-Security-Policy: default-src 'none'
X-GitHub-Request-Id: F2D1:223D8:FCB054:13138F6:5DFAC7CF

{&quot;message&quot;:&quot;Bad credentials&quot;,&quot;documentation_url&quot;:&quot;https://developer.github.com/v3&quot;}&gt;
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at com.jcabi.http.response.RestResponse.assertStatus(RestResponse.java:111)
	at com.jcabi.github.RtValuePagination$Items.fetch(RtValuePagination.java:195)
	at com.jcabi.github.RtValuePagination$Items.hasNext(RtValuePagination.java:179)
	at ru.stqa.pft.github.GithubTests.testCommits(GithubTests.java:14)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.util.ArrayList.forEach(ArrayList.java:1257)
	at org.testng.TestRunner.privateRun(TestRunner.java:770)
	at org.testng.TestRunner.run(TestRunner.java:591)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
	at org.testng.SuiteRunner.run(SuiteRunner.java:304)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
	at org.testng.TestNG.runSuites(TestNG.java:1032)
	at org.testng.TestNG.run(TestNG.java:1000)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:412)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.lang.Thread.run(Thread.java:748)
</failure>
  </testcase>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
]]></system-err>
</testsuite>
